{"version":3,"sources":["assets/rbk-channel.svg","assets/logo.svg","assets/htc-cs-logo.svg","assets/newProduct-kitty.png","assets/newProduct-batman.png","assets/newProduct-hollywood.png","assets/newProduct-strip.png","assets/1-channel.svg","assets/2x2-channel.svg","assets/amedia-premium-channel.svg","components/Header/header.jsx","components/Footer/footer.jsx","components/CustomListGroup/ListGroupItem.js","components/CustomListGroup/ListGroup.jsx","components/CustomListGroup/ListGroupLayout.js","components/CustomListGroup/ListGroupLayoutGrid.js","components/Tabbar/TabBarItem.jsx","components/Tabbar/TabBarNav.jsx","components/Tabbar/TabBar.jsx","components/Modal/Modal.jsx","components/Modal/Portal.jsx","components/Modal/ModalAuth.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","type","placeholder","React","Component","Footer","htcLogo","width","height","ListGroupItem","children","Tag","tag","attrs","classes","classNames","defaultProps","ListGroup","ListGroupLayout","props","logo_image","message","message_genres","heading","schedule_item1","schedule_item2","schedule_item3","TabBarItem","label","activeTab","active","TabBarNav","navLabel","onChangeActiveTab","onClick","TabBar","state","getChildrenLabels","map","setActiveTab","setState","renderTabs","key","this","vertical","style","position","Children","child","cloneElement","Modal","title","isOpen","onSubmit","Fragment","id","htmlFor","onCancel","Portal","el","document","getElementById","body","appendChild","removeChild","ReactDOM","createPortal","ModalAuth","userName","changedName","isLoggedIn","userPersonalInformation","keyValue","userDisplayedName","openModal","handleSubmit","inputLoginValue","inputPasswordValue","inputValue","value","localStorage","setItem","getItem","console","log","handleCancel","handleChangeLogOut","removeItem","handleChangeName","inputNameChanger","defaultValue","onChange","App","role","aria-label","hover_message","kittyImage","batmanImage","hollywoodImage","stripImage","ListGroupLayoutGrid","channel1","channel2x2","channelRbk","channelAmedia","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.91014a83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rbk-channel.5c4d8347.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2e3245d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/htc-cs-logo.efc916ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/newProduct-kitty.5e574b3f.png\";","module.exports = __webpack_public_path__ + \"static/media/newProduct-batman.7cedf799.png\";","module.exports = __webpack_public_path__ + \"static/media/newProduct-hollywood.e380a79e.png\";","module.exports = __webpack_public_path__ + \"static/media/newProduct-strip.4692ec10.png\";","module.exports = __webpack_public_path__ + \"static/media/1-channel.1ca60a7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/2x2-channel.b66c7e3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/amedia-premium-channel.4333f466.svg\";","import logo from \"../../assets/logo.svg\";\r\nimport React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <a href=\"#\" className=\"header-link\">\r\n                    <img\r\n                        src={logo} alt=\"Логотип ЦВТ\" className=\"header__header-image\"/>\r\n                </a>\r\n                <form className=\"header__header-find\">\r\n                    <p className=\"header__header-find__paragraph\">\r\n                        <input className=\"header__header-find__input\" type=\"text\" placeholder=\"Поиск...\"/>\r\n                    </p>\r\n                    <button className=\"header__header-button\"> Найти</button>\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import htcLogo from \"../../assets/htc-cs-logo.svg\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-container\">\r\n                <a className=\"footer-container__logo\" href=\"https://htc-cs.ru/\">\r\n                    <img src={htcLogo} alt=\"Логотип ЦВТ\" width=\"32\" height=\"64\"/>\r\n                </a>\r\n                <address className=\"footer-container__information\">\r\n                    <p className=\"footer-container__information_address\">426057, Россия, Удмуртская Республика, г.\r\n                        Ижевск, ул. Карла\r\n                        Маркса, 246 (ДК «Металлург»)</p>\r\n                    <p className=\"footer-container__information_phones\">+7 <span>(3412)</span> 93-88-61, 43-29-29</p>\r\n                    <a className=\"footer-container__information_website\" href=\"https://htc-cs.ru/\">htc-cs.ru</a>\r\n                </address>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ListGroupItem = ({\r\n                           children,\r\n                           className,\r\n                           tag: Tag,\r\n                           ...attrs\r\n                       }) => {\r\n    const classes = classNames(\r\n        'list-group-item',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <Tag className={classes} {...attrs}>\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n\r\nListGroupItem.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n};\r\n\r\nListGroupItem.defaultProps = {\r\n    children: null,\r\n    className: '',\r\n    tag: 'figure',\r\n};\r\n\r\nexport default ListGroupItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ListGroup = ({\r\n                       children, className, tag: Tag, ...attrs\r\n                   }) => {\r\n    const classes = classNames(\r\n        'list-group',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <Tag className={classes} {...attrs}>\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n\r\nListGroup.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    children: null,\r\n    className: '',\r\n    tag: 'ul',\r\n};\r\n\r\nexport default ListGroup;","/* eslint-disable */\r\nimport React, {Fragment} from 'react';\r\n\r\nimport ListGroupItem from './ListGroupItem';\r\nimport ListGroup from \"./ListGroup\";\r\n\r\nconst ListGroupLayout = (props) => (\r\n    <Fragment>\r\n        <ListGroup {...props}>\r\n            <ListGroupItem {...props}>\r\n                <div className=\"list-group-layout__figure_wrapper\">\r\n                <figure className=\"list-group-layout__figure\">\r\n                    <img className=\"list-group-layout__figure_image\" src={props.logo_image}/>\r\n                    <figcaption className=\"list-group-layout__figure_message\"> {props.message} </figcaption>\r\n                    <figcaption className=\"list-group-layout__figure_message_genres\"> {props.message_genres} </figcaption>\r\n                </figure>\r\n                </div>\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n    </Fragment>\r\n);\r\nexport default ListGroupLayout;\r\n/* eslint-enable */","/* eslint-disable */\r\nimport React, {Fragment} from 'react';\r\n\r\nimport ListGroupItem from './ListGroupItem';\r\nimport ListGroup from \"./ListGroup\";\r\n\r\nconst ListGroupLayout = (props) => (\r\n    <Fragment>\r\n        <ListGroup {...props}>\r\n            <ListGroupItem {...props} className=\"list-group-item__channel-image\">\r\n                <img className=\"list-group-item__image\" src={props.logo_image}/>\r\n                <div className=\"list-group-item__grid-table\">\r\n                    <span className=\"list-group-item__grid-table_span\"> {props.heading} </span>\r\n                    <div className=\"list-group-item__grid-table_element\">\r\n                        <ul className=\"list-group-item__grid-table_ul\">\r\n                            <li className=\"list-group-item__grid-table_ul-li\"><span> {props.schedule_item1} </span></li>\r\n                            <li className=\"list-group-item__grid-table_ul-li\"><span> {props.schedule_item2} </span></li>\r\n                            <li className=\"list-group-item__grid-table_ul-li\"><span> {props.schedule_item3} </span></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n    </Fragment>\r\n);\r\nexport default ListGroupLayout;\r\n/* eslint-enable */","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport '../../styles/TabBarItem.scss';\n\nconst TabBarItem = ({\n                        children, label, activeTab, ...attrs\n                    }) => {\n    const classes = classNames(\n        'tab-bar-item',\n        {active: activeTab === label},\n    );\n\n    return (\n        <div className={classes} {...attrs}>\n            {children}\n        </div>\n    );\n};\n\nTabBarItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    children: PropTypes.node,\n    activeTab: PropTypes.string,\n};\n\nTabBarItem.defaultProps = {\n    children: null,\n    activeTab: '',\n};\n\nexport default TabBarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport '../../styles/TabBarNav.scss';\n\nconst TabBarNav = ({navLabel, className, onChangeActiveTab}) => {\n    const classes = classNames(\n        className,\n        'nav-item',\n    );\n\n    return (\n        <button\n            type=\"button\"\n            className={classes}\n            onClick={() => {\n                onChangeActiveTab(navLabel);\n            }}\n        >\n            {navLabel}\n        </button>\n    );\n};\n\nTabBarNav.propTypes = {\n    navLabel: PropTypes.string,\n    className: PropTypes.string,\n    onChangeActiveTab: PropTypes.func,\n};\n\nTabBarNav.defaultProps = {\n    navLabel: 'Tab',\n    className: '',\n    onChangeActiveTab: () => {\n    },\n};\n\nexport default TabBarNav;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport TabBarNav from './TabBarNav';\nimport Scrollbar from \"react-scrollbars-custom\";\n\nimport '../../styles/TabBar.scss';\n\n\nclass TabBar extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        className: PropTypes.string,\n        vertical: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        children: null,\n        className: '',\n        vertical: false,\n    };\n\n    state = {\n        activeTab: null,\n    }\n\n    componentDidMount() {\n        const {children = []} = this.props;\n\n        const activeTab = this.getChildrenLabels(children)[0];\n\n        this.setActiveTab(activeTab);\n    }\n\n    getChildrenLabels = children => children.map(({props}) => props.label)\n\n    setActiveTab = activeTab => {\n        const {activeTab: currentTab} = this.state;\n\n        if (currentTab !== activeTab) {\n            this.setState({\n                activeTab,\n            });\n        }\n    }\n\n    renderTabs = () => {\n        const {children = []} = this.props;\n        const {activeTab} = this.state;\n\n        return this.getChildrenLabels(children).map(navLabel => (\n            <TabBarNav\n                key={navLabel}\n                navLabel={navLabel}\n                className={classNames({active: activeTab === navLabel})}\n                onChangeActiveTab={this.setActiveTab}\n            />\n        ));\n    }\n\n    render() {\n        const {activeTab} = this.state;\n        const {\n            children, className, vertical, ...attrs\n        } = this.props;\n\n        const classes = classNames(\n            'tab-bar',\n            className,\n            {vertical},\n        );\n\n        return (\n            <div className={classes} {...attrs}>\n                <Scrollbar style={{position: ''}}>\n                    <div className=\"tab-container\">\n                        <div className=\"tab-bar-nav\">\n                            {this.renderTabs()}\n                        </div>\n                        {React.Children.map(children, child => React.cloneElement(child, {activeTab}))}\n                    </div>\n                </Scrollbar>\n            </div>\n        );\n    }\n}\n\nexport default TabBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../../styles/modal.scss';\n\nconst Modal = ({\n                   title, isOpen, onSubmit, children,\n               }) => {\n\n    return (\n        <>\n            {isOpen &&\n            <React.Fragment>\n                <div className=\"modalOverlay\">\n                    <div className=\"modalWindow\">\n                        <div className=\"modalHeader\">\n                            <div className=\"modalTitle\">{title}</div>\n                        </div>\n                        <div className=\"modalBody\">\n                            <input className=\"modal-Login\" id=\"input-login\" type=\"text\" placeholder=\"Логин\"/>\n                            <input className=\"modal-Password\" id=\"input-password\" type=\"text\" placeholder=\"Пароль\"/>\n                            <div className=\"modalBodyCheckbox\">\n                                <input className=\"modal-checkbox-input\" id=\"checkbox-remember\" type=\"checkbox\"/>\n                                <label className=\"modal-checkbox-label\" htmlFor=\"checkboxlabel\">Запомнить</label>\n                            </div>\n                            {children}\n                        </div>\n                        <div className=\"modalFooter\">\n                            <button className=\"modal-enter-button\" onClick={onSubmit}>Войти</button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n            }\n        </>\n    );\n};\n\nModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    children: PropTypes.node,\n};\n\nModal.defaultProps = {\n    title: 'Modal title',\n    isOpen: false,\n    onCancel: () => {\n    },\n    onSubmit: () => {\n    },\n    children: null,\n};\n\nexport default Modal;\n","import {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Portal extends Component {\n\n    el = document.getElementById('root');\n\n    componentDidMount() {\n        document.body.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.body.removeChild(this.el);\n    }\n\n    render() {\n        const {children} = this.props;\n\n        return ReactDOM.createPortal(children, this.el);\n    }\n}\n\nexport default Portal;\n","/* eslint-disable */\nimport React from 'react';\nimport Modal from './Modal';\nimport Portal from \"./Portal\";\n\nclass ModalAuth extends React.Component {\n\n    state = {\n        userName: '',\n        changedName: '',\n        isOpen: false,\n        isLoggedIn: false,\n        userPersonalInformation: {\n            key: 'user-info',\n            keyValue: ''\n        },\n        userDisplayedName: {\n            key: 'user-name',\n            keyValue: ''\n        },\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('user-name')) {\n            this.setState({isLoggedIn: true, userName: localStorage.getItem('user-name')})\n        }\n    }\n\n    openModal = () => {\n        this.setState({isOpen: true});\n    }\n\n    handleSubmit = () => {\n        let inputLoginValue = document.getElementById(\"input-login\");\n        let inputPasswordValue = document.getElementById(\"input-password\");\n        const inputValue = inputLoginValue.value + ':' + inputPasswordValue.value;\n        localStorage.setItem(this.state.userPersonalInformation.key, inputValue);\n        localStorage.setItem(this.state.userDisplayedName.key, inputLoginValue.value);\n        this.setState({isOpen: false, isLoggedIn: true, userName: localStorage.getItem('user-name')});\n        console.log('Submit function!');\n    }\n\n    handleCancel = () => {\n        this.setState({isOpen: false});\n        console.log('Cancel function!');\n    }\n\n    handleChangeLogOut = () => {\n        localStorage.removeItem(this.state.userPersonalInformation.key)\n        localStorage.removeItem(this.state.userDisplayedName.key);\n        this.setState({userName: '', isLoggedIn: false});\n        console.log('logout...');\n    }\n\n    handleChangeName = () => {\n        const inputNameChanger = document.getElementById('input-name-change');\n        localStorage.setItem('user-name', inputNameChanger.value);\n    }\n\n    render() {\n        return (\n            <div className=\"header__header-auth\">\n                <input className=\"header__header-auth__input\" id=\"input-name-change\"\n                       defaultValue={this.state.userName}\n                       onChange={this.handleChangeName}/>\n                <button\n                    className={(this.state.isLoggedIn === true) ? \"header__header-auth__button-exit\" : \"header__header-auth__button-enter\"}\n                    onClick={(this.state.isLoggedIn === true ? this.handleChangeLogOut : this.openModal)}>\n                    {(this.state.isLoggedIn === true ? 'Выйти' : 'Войти')}\n                </button>\n                <Portal style={{}}>\n                    <Modal\n                        title=\"Вход\"\n                        isOpen={this.state.isOpen}\n                        isLoggedIn={this.state.isLoggedIn}\n                        onCancel={this.handleCancel}\n                        onSubmit={this.handleSubmit}\n                        className=\"portal__modal-window\"\n                    >\n                    </Modal>\n                </Portal>\n            </div>\n        )\n    }\n\n}\n\nexport default ModalAuth;\n\n\n/* eslint-enable */\n","import React from 'react';\n\nimport Header from \"./components/Header/header\";\nimport Footer from \"./components/Footer/footer\";\nimport ListGroupLayout from \"./components/CustomListGroup/ListGroupLayout\";\nimport ListGroupLayoutGrid from \"./components/CustomListGroup/ListGroupLayoutGrid\";\nimport TabBarItem from \"./components/Tabbar/TabBarItem\";\n\nimport TabBar from \"./components/Tabbar/TabBar\";\nimport ModalAuth from \"./components/Modal/ModalAuth\";\n\nimport kittyImage from \"./assets/newProduct-kitty.png\";\nimport batmanImage from \"./assets/newProduct-batman.png\";\nimport hollywoodImage from \"./assets/newProduct-hollywood.png\";\nimport stripImage from \"./assets/newProduct-strip.png\";\n\nimport channel1 from \"./assets/1-channel.svg\";\nimport channel2x2 from \"./assets/2x2-channel.svg\";\nimport channelRbk from \"./assets/rbk-channel.svg\";\nimport channelAmedia from \"./assets/amedia-premium-channel.svg\";\n\nimport './styles/style.scss'\n\nfunction App() {\n    return (\n        <div className=\"wrapper\" id=\"wrapper\">\n            <div className=\"header-wrapper\">\n                <Header/>\n                <ModalAuth/>\n            </div>\n\n            <main className=\"main\">\n                <TabBar>\n                    <TabBarItem label='Фильмы'>\n                            <span className=\"tab-bar-item__span\" role=\"img\"\n                                  aria-label=\"newProducts\">🔥Новинки</span>\n                        <div className=\"tab-bar-item__new\">\n                            <ListGroupLayout className=\"tab-bar-item__new-products\"\n                                             message=\"Мульт в кино. Выпуск №103. Некогда грустить\"\n                                             hover_message=\"Lorem ipsum dolor sit\" logo_image={kittyImage}/>\n                            <ListGroupLayout className=\"tab-bar-item__new-products\" message=\"Новый Бэтмен\"\n                                             hover_message=\"Lorem ipsum dolor sit\" logo_image={batmanImage}/>\n                            <ListGroupLayout className=\"tab-bar-item__new-products\"\n                                             message=\"Однажды... в Голливуде\"\n                                             hover_message=\"Фильм повествует о череде\n                                     событий, произошедших в Голливуде в 1969 году, на закате его «золотого\n                            века». Известный актер Рик Далтон и его дублер Клифф Бут пытаются найти свое место в\n                            стремительно меняющемся мире киноиндустрии.\"\n                                             logo_image={hollywoodImage}/>\n                            <ListGroupLayout className=\"tab-bar-item__new-products\" message=\"Стриптизёрши\"\n                                             hover_message=\"Lorem ipsum dolor sit\" logo_image={stripImage}/>\n                        </div>\n                        <span className=\"tab-bar-item__span\">Жанры</span>\n                        <div className=\"tab-bar-item__genres\">\n\n                            <ListGroupLayout className=\"tab-bar-item__genres_comedy\"\n                                             message_genres={<span role=\"img\"\n                                                                   aria-label=\"tab-bar-item__genres_emoji\">😁 <br/> Комедии </span>}/>\n                            <ListGroupLayout className=\"tab-bar-item__genres_drama\"\n                                             message_genres={<span role=\"img\"\n                                                                   aria-label=\"tab-bar-item__genres_emoji\">😭 <br/> Драмы </span>}/>\n                            <ListGroupLayout className=\"tab-bar-item__genres_fantastic\"\n                                             message_genres={<span role=\"img\"\n                                                                   aria-label=\"tab-bar-item__genres_emoji\">👽 <br/> Фантастика </span>}/>\n                            <ListGroupLayout className=\"tab-bar-item__genres_scary\"\n                                             message_genres={<span role=\"img\"\n                                                                   aria-label=\"tab-bar-item__genres_emoji\">👻 <br/> Ужасы </span>}/>\n                        </div>\n                    </TabBarItem>\n\n                    <TabBarItem label='Телеканалы'>\n\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"Первый канал\"\n                                             schedule_item1=\"13:00 Новости(с субтитрами)\"\n                                             schedule_item2=\"14:00 Давай поженимся\"\n                                             schedule_item3=\"15:00 Другие новости\"\n                                             logo_image={channel1}/>\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"2x2\"\n                                             schedule_item1=\"13:00 МУЛЬТ ТВ. Сезон 4, 7 серия\"\n                                             schedule_item2=\"14:00 ПОДОЗРИТЕЛЬНАЯ СОВА. Сезон 7, 7 серия\"\n                                             schedule_item3=\"15:00 БУРДАШЕВ. Сезон 1, 20 серия\"\n                                             logo_image={channel2x2}/>\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"РБК\"\n                                             schedule_item1=\"13:00 ДЕНЬ. Горючая смесь: как бороться с суррогатом на АЗС\"\n                                             schedule_item2=\"14:00 ДЕНЬ. Главные темы\"\n                                             schedule_item3=\"15:00 Главные новости\" logo_image={channelRbk}/>\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"AMEDIA PREMIUM\"\n                                             schedule_item1=\"13:00 Клиент всегда мёртв\"\n                                             schedule_item2=\"14:00 Голодные игры: Сойка-пересмешница. Часть I\"\n                                             schedule_item3=\"15:00 Секс в большом городе\"\n                                             logo_image={channelAmedia}/>\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"Канал\"\n                                             schedule_item1=\"13:00 Новости(с субтитрами)\"\n                                             schedule_item2=\"14:00 Давай поженимся\"\n                                             schedule_item3=\"15:00 Другие новости\"\n                                             logo_image={channelRbk}/>\n                        <ListGroupLayoutGrid className=\"tab-bar-item__channels\" heading=\"Канал\"\n                                             schedule_item1=\"13:00 Новости(с субтитрами)\"\n                                             schedule_item2=\"14:00 Давай поженимся\"\n                                             schedule_item3=\"15:00 Другие новости\"\n                                             logo_image={channelRbk}/>\n                    </TabBarItem>\n                </TabBar>\n            </main>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}